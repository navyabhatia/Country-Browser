{"ast":null,"code":"var _jsxFileName = \"/Users/navyabhatia/Desktop/Github Folder/Country-Browser/src/components/Country.jsx\",\n    _s = $RefreshSig$();\n\n/*\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { MenuItem, Select } from \"@mui/material\";\nimport { Container, Row, Col, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport Box from \"@mui/material/Box\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Details from \"./Details\";\nimport FormControl from \"@mui/material/FormControl\";\n\nconst Country = () => {\n  const [countries, setCountries] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [details, setDetails] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(\n        \"https://countriesnow.space/api/v0.1/countries/info?returns=currency,flag,unicodeFlag,dialCode\"\n      );\n\n      setCountries(response.data.data);\n    };\n\n    fetchData();\n  }, [countries]);\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value);\n  };\n\n  const handleCountry = async (country) => {\n    const res = await axios.get(\n      `https://countriesnow.space/api/v0.1/countries/population`\n    );\n\n    const countrypopulation = res.data.data;\n\n    setDetails(\n      <Container>\n        <h1>Welcome to {country.name}</h1>\n\n        <h3>{country.currency}</h3>\n\n        <h4> {country.unicodeFlag} </h4>\n\n        <img\n          src={country.flag}\n          height=\"auto\"\n          width=\"320px\"\n          alt=\"country flag\"\n        />\n        <Col>\n          <h3>Population count for country is {countrypopulation.country}</h3>\n          <h4> </h4>\n        </Col>\n      </Container>\n    );\n  };\n\n  return (\n    <Container fluid>\n      <div className=\"row\">\n        <div classNmae=\"column\">\n          <Box\n            sx={{\n              marginLeft: 15,\n              width: 200,\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"nowrap\",\n              alignItems: \"center\",\n              float: \"left\",\n            }}\n          >\n            <FormControl sx={{ flexGrow: 1 }}>\n              <InputLabel id=\"label\">Country</InputLabel>\n              <Select label=\"Country\" onChange={handleSearch} value={search}>\n                {countries.map((country, index) => (\n                  <MenuItem\n                    value={index}\n                    onClick={() => handleCountry(country)}\n                  >\n                    {\" \"}\n                    {country.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Box>\n        </div>\n        {\n          //now for duration}\n        }\n        <div className=\"column\">\n          <Box\n            sx={{\n              marginLeft: 15, //box margin fro left\n              width: 200, //box width hai yeh\n              display: \"flex\",\n              flexDirection: \"row-reverse\",\n              flexWrap: \"nowrap\",\n              alignItems: \"center\",\n              float: \"left\",\n            }}\n          >\n            <FormControl sx={{ flexGrow: 1 }}>\n              <InputLabel id=\"label2\">Duration</InputLabel>\n              <Select label=\"Duration\">\n                <MenuItem value={1}>one</MenuItem>\n                <MenuItem value={2}>Two</MenuItem>\n                <MenuItem value={3}>Thee</MenuItem>\n              </Select>\n            </FormControl>\n          </Box>\n        </div>\n      </div>\n\n      <div>\n        {details.length === 0 ? (\n          <h1>Select Country and Duration</h1>\n        ) : (\n          { details }\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default Country;\n/*\n \n            {console.log(search)}\n            <p> {search && cd[search]} </p>\n\n*/\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Row, Col, ListGroup, ListGroupItem, Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [filtered, setFiltered] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [details, setDetails] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(\"https://restcountries.eu/rest/v2/all\");\n      setCountries(response.data);\n    };\n\n    fetchData();\n  }, [countries]);\n  useEffect(() => {\n    setFiltered(countries.filter(country => country.name.toUpperCase().includes(search.toUpperCase())));\n  }, [countries, search]);\n\n  const handleSearch = event => {\n    setSearch(event.target.value);\n  };\n\n  const handleSelectCountry = async country => {\n    const response = await axios.get(`https://cors-anywhere.herokuapp.com/http://api.weatherstack.com/current?access_key=${process.env.REACT_APP_WEATHERSTACK_API_KEY}&query=${country.capital}`);\n    const weather = response.data.current;\n    setDetails( /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-md-start align-items-start\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: country.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Capital City: \", country.capital]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Population: \", country.population]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Languages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: country.languages.map(language => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: language.name\n            }, language.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Weather in \", country.capital]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"temperature: \", weather.temperature, \" Celcius\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: weather.weather_icons[0],\n            alt: \"Temp Icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Wind Speed: \", weather.wind_speed, \" mph\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Wind Direction: \", weather.wind_dir]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: country.flag,\n            height: \"auto\",\n            width: \"320px\",\n            alt: \"country flag\",\n            className: \"shadow rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"bg-light\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center text-primary p-5\",\n      children: \"Country Browser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        className: \"py-2\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          className: \"pb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Find A Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: search,\n            type: \"text\",\n            placeholder: \"Filter Countries...\",\n            onChange: handleSearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          children: filtered.map(country => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n            action: true,\n            onClick: () => handleSelectCountry(country),\n            children: country.name\n          }, country.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: \"9\",\n        className: \"py-2\",\n        children: details\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"3TKj1prpCdzpZJx6q0B0n3LGAnY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/navyabhatia/Desktop/Github Folder/Country-Browser/src/components/Country.jsx"],"names":["React","useEffect","useState","axios","Container","Row","Col","ListGroup","ListGroupItem","Form","App","props","countries","setCountries","filtered","setFiltered","search","setSearch","details","setDetails","fetchData","response","get","data","filter","country","name","toUpperCase","includes","handleSearch","event","target","value","handleSelectCountry","process","env","REACT_APP_WEATHERSTACK_API_KEY","capital","weather","current","population","languages","map","language","temperature","weather_icons","wind_speed","wind_dir","flag"],"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","sourcesContent":["/*\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { MenuItem, Select } from \"@mui/material\";\nimport { Container, Row, Col, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport Box from \"@mui/material/Box\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Details from \"./Details\";\nimport FormControl from \"@mui/material/FormControl\";\n\nconst Country = () => {\n  const [countries, setCountries] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [details, setDetails] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(\n        \"https://countriesnow.space/api/v0.1/countries/info?returns=currency,flag,unicodeFlag,dialCode\"\n      );\n\n      setCountries(response.data.data);\n    };\n\n    fetchData();\n  }, [countries]);\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value);\n  };\n\n  const handleCountry = async (country) => {\n    const res = await axios.get(\n      `https://countriesnow.space/api/v0.1/countries/population`\n    );\n\n    const countrypopulation = res.data.data;\n\n    setDetails(\n      <Container>\n        <h1>Welcome to {country.name}</h1>\n\n        <h3>{country.currency}</h3>\n\n        <h4> {country.unicodeFlag} </h4>\n\n        <img\n          src={country.flag}\n          height=\"auto\"\n          width=\"320px\"\n          alt=\"country flag\"\n        />\n        <Col>\n          <h3>Population count for country is {countrypopulation.country}</h3>\n          <h4> </h4>\n        </Col>\n      </Container>\n    );\n  };\n\n  return (\n    <Container fluid>\n      <div className=\"row\">\n        <div classNmae=\"column\">\n          <Box\n            sx={{\n              marginLeft: 15,\n              width: 200,\n              display: \"flex\",\n              flexDirection: \"row\",\n              flexWrap: \"nowrap\",\n              alignItems: \"center\",\n              float: \"left\",\n            }}\n          >\n            <FormControl sx={{ flexGrow: 1 }}>\n              <InputLabel id=\"label\">Country</InputLabel>\n              <Select label=\"Country\" onChange={handleSearch} value={search}>\n                {countries.map((country, index) => (\n                  <MenuItem\n                    value={index}\n                    onClick={() => handleCountry(country)}\n                  >\n                    {\" \"}\n                    {country.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Box>\n        </div>\n        {\n          //now for duration}\n        }\n        <div className=\"column\">\n          <Box\n            sx={{\n              marginLeft: 15, //box margin fro left\n              width: 200, //box width hai yeh\n              display: \"flex\",\n              flexDirection: \"row-reverse\",\n              flexWrap: \"nowrap\",\n              alignItems: \"center\",\n              float: \"left\",\n            }}\n          >\n            <FormControl sx={{ flexGrow: 1 }}>\n              <InputLabel id=\"label2\">Duration</InputLabel>\n              <Select label=\"Duration\">\n                <MenuItem value={1}>one</MenuItem>\n                <MenuItem value={2}>Two</MenuItem>\n                <MenuItem value={3}>Thee</MenuItem>\n              </Select>\n            </FormControl>\n          </Box>\n        </div>\n      </div>\n\n      <div>\n        {details.length === 0 ? (\n          <h1>Select Country and Duration</h1>\n        ) : (\n          { details }\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default Country;\n/*\n \n            {console.log(search)}\n            <p> {search && cd[search]} </p>\n\n*/\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  Container,\n  Row,\n  Col,\n  ListGroup,\n  ListGroupItem,\n  Form,\n} from \"react-bootstrap\";\n\nconst App = (props) => {\n  const [countries, setCountries] = useState([]);\n  const [filtered, setFiltered] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [details, setDetails] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get(\"https://restcountries.eu/rest/v2/all\");\n\n      setCountries(response.data);\n    };\n\n    fetchData();\n  }, [countries]);\n\n  useEffect(() => {\n    setFiltered(\n      countries.filter((country) =>\n        country.name.toUpperCase().includes(search.toUpperCase())\n      )\n    );\n  }, [countries, search]);\n\n  const handleSearch = (event) => {\n    setSearch(event.target.value);\n  };\n\n  const handleSelectCountry = async (country) => {\n    const response = await axios.get(\n      `https://cors-anywhere.herokuapp.com/http://api.weatherstack.com/current?access_key=${process.env.REACT_APP_WEATHERSTACK_API_KEY}&query=${country.capital}`\n    );\n\n    const weather = response.data.current;\n\n    setDetails(\n      <Container>\n        <Row className=\"justify-content-md-start align-items-start\">\n          <Col>\n            <h2>{country.name}</h2>\n            <p>Capital City: {country.capital}</p>\n            <p>Population: {country.population}</p>\n            <h4>Languages</h4>\n            <ul>\n              {country.languages.map((language) => (\n                <li key={language.name}>{language.name}</li>\n              ))}\n            </ul>\n            <h4>Weather in {country.capital}</h4>\n            <p>temperature: {weather.temperature} Celcius</p>\n            <img src={weather.weather_icons[0]} alt=\"Temp Icon\" />\n            <p>Wind Speed: {weather.wind_speed} mph</p>\n            <p>Wind Direction: {weather.wind_dir}</p>\n          </Col>\n          <Col>\n            <img\n              src={country.flag}\n              height=\"auto\"\n              width=\"320px\"\n              alt=\"country flag\"\n              className=\"shadow rounded\"\n            />\n          </Col>\n        </Row>\n      </Container>\n    );\n  };\n\n  return (\n    <Container fluid className=\"bg-light\">\n      <h1 className=\"text-center text-primary p-5\">Country Browser</h1>\n      <Row>\n        <Col md=\"3\" className=\"py-2\">\n          <Form className=\"pb-3\">\n            <Form.Label>Find A Country</Form.Label>\n            <Form.Control\n              value={search}\n              type=\"text\"\n              placeholder=\"Filter Countries...\"\n              onChange={handleSearch}\n            />\n          </Form>\n          <ListGroup>\n            {filtered.map((country) => (\n              <ListGroupItem\n                action\n                key={country.name}\n                onClick={() => handleSelectCountry(country)}\n              >\n                {country.name}\n              </ListGroupItem>\n            ))}\n          </ListGroup>\n        </Col>\n        <Col md=\"9\" className=\"py-2\">\n          {details}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}